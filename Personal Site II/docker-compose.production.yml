version: "3"

services:
  # proxy:
  #   container_name: proxy
  #   build:
  #     context: ./nginx
  #     dockerfile: Dockerfile
  #   restart: unless-stopped
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./nginx/production:/etc/nginx/conf.d
  #     - ./nginx/production/certbot/conf:/etc/letsencrypt
  #     - ./nginx/production/certbot/www:/var/www/certbot
  #   networks:
  #     - web
  #   command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  # certbot:
  #   container_name: certbot
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./nginx/production/certbot/conf:/etc/letsencrypt
  #     - ./nginx/production/certbot/www:/var/www/certbot
  #   networks:
  #     - web
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  db:
    container_name: db
    image: mongo
    restart: always
    expose:
      - 27017
    environment:
      MONGO_USER: "mongouser"
      MONGO_PASSWORD: "mongopass"
      MONGO_DB: "portfolio"
    volumes:
      - mongo:/data/db
    networks:
      - internal
  api:
    container_name: api
    build:
      context: ./api
      dockerfile: Dockerfile
    restart: always
    expose:
      - 8081
    depends_on:
      - db
    networks:
      - internal
      - web
  client:
    container_name: react
    build:
      context: ./client
      dockerfile: Dockerfile
    restart: always
    expose:
      - 8080
    environment:
      HOST: 0.0.0.0
    depends_on:
      - api
    networks:
      - web

volumes:
  mongo:

networks:
  internal:
  web:
    external:
      name: nginx_web
